=============== Initialization BEGIN ===============
# grm_get_start_NT: module

# grm_preprocess py _external_symbols: ['_newline', '_indent', '_dedent', '_string_start', 'string_content', '_string_end']
# grm_preprocess py _aliased_symbols: {'identifier', 'parenthesized_expression', 'lambda', 'list_splat_pattern', 'block'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/py_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: program

# grm_preprocess js _external_symbols: ['_automatic_semicolon', '_template_chars', '_ternary_qmark']
# grm_preprocess js _aliased_symbols: {'identifier', 'export_specifier', 'namespace_import', 'property_identifier', 'import_specifier', 'call_expression', 'shorthand_property_identifier_pattern', 'shorthand_property_identifier', 'string_fragment', 'member_expression', 'namespace_export', 'statement_identifier'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/js_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: translation_unit

# grm_preprocess cpp _external_symbols: ['raw_string_literal']
# grm_preprocess cpp _aliased_symbols: {'argument_list', 'namespace_identifier', 'parenthesized_expression', 'attributed_statement', 'statement_identifier', 'function_definition', 'pointer_declarator', 'qualified_identifier', 'type_identifier', 'parenthesized_declarator', 'preproc_ifdef', 'unary_expression', 'attributed_declarator', 'binary_expression', 'dependent_name', 'reference_declarator', 'declaration', 'preproc_else', 'call_expression', 'function_declarator', 'preproc_if', 'parameter_pack_expansion', 'field_identifier', 'array_declarator', 'preproc_elif'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/cpp_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: compilation_unit

# grm_preprocess cs _external_symbols: ['_preproc_directive_end']
# grm_preprocess cs _aliased_symbols: {'label_name', 'prefix_unary_expression', 'verbatim_string_literal', 'binary_expression', 'parameter_modifier', 'integer_literal', 'base_list', 'parenthesized_expression'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/cs_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: program

# grm_preprocess java _external_symbols: []
# grm_preprocess java _aliased_symbols: {'identifier', 'type_identifier'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/java_grammar.json (NOTICE: Not for accurate serializing)...
=============== Initialization END ===============
 * Serving Flask app "server_trans" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
=============== Initialization BEGIN ===============
# grm_get_start_NT: module

# grm_preprocess py _external_symbols: ['_newline', '_indent', '_dedent', '_string_start', 'string_content', '_string_end']
# grm_preprocess py _aliased_symbols: {'list_splat_pattern', 'lambda', 'block', 'identifier', 'parenthesized_expression'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/py_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: program

# grm_preprocess js _external_symbols: ['_automatic_semicolon', '_template_chars', '_ternary_qmark']
# grm_preprocess js _aliased_symbols: {'shorthand_property_identifier_pattern', 'import_specifier', 'export_specifier', 'string_fragment', 'property_identifier', 'statement_identifier', 'namespace_import', 'identifier', 'shorthand_property_identifier', 'member_expression', 'call_expression', 'namespace_export'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/js_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: translation_unit

# grm_preprocess cpp _external_symbols: ['raw_string_literal']
# grm_preprocess cpp _aliased_symbols: {'function_declarator', 'array_declarator', 'parenthesized_declarator', 'unary_expression', 'argument_list', 'preproc_else', 'pointer_declarator', 'attributed_statement', 'preproc_elif', 'attributed_declarator', 'preproc_if', 'type_identifier', 'field_identifier', 'qualified_identifier', 'function_definition', 'statement_identifier', 'declaration', 'binary_expression', 'namespace_identifier', 'preproc_ifdef', 'reference_declarator', 'parameter_pack_expansion', 'dependent_name', 'call_expression', 'parenthesized_expression'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/cpp_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: compilation_unit

# grm_preprocess cs _external_symbols: ['_preproc_directive_end']
# grm_preprocess cs _aliased_symbols: {'integer_literal', 'prefix_unary_expression', 'verbatim_string_literal', 'base_list', 'parameter_modifier', 'binary_expression', 'parenthesized_expression', 'label_name'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/cs_grammar.json (NOTICE: Not for accurate serializing)...
# grm_get_start_NT: program

# grm_preprocess java _external_symbols: []
# grm_preprocess java _aliased_symbols: {'type_identifier', 'identifier'}
# add _direct_cset to each prod...
# add _sym_ahead_set to each prod...
# Logging JSON to ./logs/java_grammar.json (NOTICE: Not for accurate serializing)...
=============== Initialization END ===============
(program (lexical_declaration (variable_declarator name: (identifier) value: (object (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (string (string_fragment)))))))
---------------------------
(js.program 0 (js.lexical_declaration 1 "let" (js.variable_declarator 2 (js.identifier 3 "a") "=" (js.object 4 "{" (js.pair 5 (js.property_identifier 6 "a") ":" (js.string 7 "\"" (js.string_fragment 8 "flask") "\"")) "," (js.pair 9 (js.property_identifier 10 "b") ":" (js.string 11 "\"" (js.string_fragment 12 "tornado") "\"")) "}")) ";"))# Slot create: 0  belong_ex_id: None


++++++++++++++++++++++++++++++++++++++++ _set_program_str. 1521 ++++++++++++++++++++++++++++++++++++++++

++++++++++++  set self.expansion_programs
>>>>> _expand_loop <<<<<
############## _expand_loop 1 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 0, 'alt_step': 0, 'expansion': None, 'choose_idx': None, 'prev_alt_id': None, 'todo_slot_ids': [0], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': True}
_get_or_create_alt_node prev_alt (id:0) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:0 belong_ex:None))
_try_match_rec mismatch: js.program js.for_in_statement
_try_match_rec mismatch: js.program js.identifier
_try_match_rec mismatch: js.program js.property_identifier
_try_match_rec mismatch: js.program js.string
_try_match_rec mismatch: js.program js.string_fragment
_try_match_rec mismatch: js.program js.number
_try_match_rec ARBITRARY MATCHED! nice. js.program
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 2  belong_ex_id: 1
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['"js.program"', ['"*1"', 2]], ['"*2"', 'EMPTY']]
# _possible_expansion_iter_gen matched! (Slot id:0 belong_ex:None) (Expansion ex:1, corres:0)
# _fetch_parser cloning from checkpoint: 0
===============================
# add_expansion_parse_until_stuck. (Expansion ex:1, corres:0)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 1 ++++++++++++++++++++++++++++++++++++++++++
0. None  |  []  \\\  (EXC ntdepth(0) eid(None) frag(['fragment', ['"*1"', 0]]) fidx(1)) =>...  ///  (GRC ntdepth(0) pid(None) prod(140354909706832 (SYMBOL program)) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 0. None  |  []  \\\  (EXC ntdepth(0) eid(1) frag(['fragment', ['"js.program"', ['"*1"', 2]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(0) pid(None) prod(140354909706832 (SYMBOL program)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 1 ++++++++++++++++++++++++++++++++++++++++++
0. None  |  []  \\\  (EXC ntdepth(0) eid(1) frag(['fragment', ['"js.program"', ['"*1"', 2]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(0) pid(None) prod(140354909706832 (SYMBOL program)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.program"', ['"*1"', 2]] (1 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.program" ex_nt_depth: 0 -> 1 1. [0, None, 'NT', '"js.program"']  |  []  \\\  (EXC ntdepth(1) eid(1) frag(['"js.program"', ['"*1"', 2]]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 2 ++++++++++++++++++++++++++++++++++++++++++
1. [0, None, 'NT', '"js.program"']  |  []  \\\  (EXC ntdepth(1) eid(1) frag(['"js.program"', ['"*1"', 2]]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(0)) =>...
# Stuck!!! stacksize: 2
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 1 apply_expand_func SUCCEED on exid:1 (corres_slot_id:0)


############## _expand_loop 2 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 1, 'alt_step': 1, 'expansion': (Expansion ex:1, corres:0), 'choose_idx': 0, 'prev_alt_id': 0, 'todo_slot_ids': [2], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:1) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:2 belong_ex:1))
_try_match_rec mismatch: js.lexical_declaration js.for_in_statement
_try_match_rec mismatch: js.lexical_declaration js.identifier
_try_match_rec mismatch: js.lexical_declaration js.property_identifier
_try_match_rec mismatch: js.lexical_declaration js.string
_try_match_rec mismatch: js.lexical_declaration js.string_fragment
_try_match_rec mismatch: js.lexical_declaration js.number
_try_match_rec ARBITRARY MATCHED! nice. js.lexical_declaration
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 3  belong_ex_id: 2
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
# _possible_expansion_iter_gen matched! (Slot id:2 belong_ex:1) (Expansion ex:2, corres:2)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:2, corres:2)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 2 ++++++++++++++++++++++++++++++++++++++++++
1. [0, None, 'NT', '"js.program"']  |  []  \\\  (EXC ntdepth(1) eid(1) frag(['"js.program"', ['"*1"', 2]]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 1. [0, None, 'NT', '"js.program"']  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 2 ++++++++++++++++++++++++++++++++++++++++++
1. [0, None, 'NT', '"js.program"']  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 2. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413424 (CHOICE (SYMBOL hash_bang_line) | (BLANK))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 3 ++++++++++++++++++++++++++++++++++++++++++
2. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413424 (CHOICE (SYMBOL hash_bang_line) | (BLANK))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL hash_bang_line)
_is_possible_prod_for_ex_contin ELEM  ['"js.lexical_declaration"', ['"*1"', 3]]
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 'EMPTY']
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413424 (CHOICE (SYMBOL hash_bang_line) | (BLANK))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 3. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413584 (SYMBOL hash_bang_line)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 4 ++++++++++++++++++++++++++++++++++++++++++
3. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413584 (SYMBOL hash_bang_line)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.hash_bang_line")

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 4 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL hash_bang_line) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 3 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL hash_bang_line) | (BLANK)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 3 ++++++++++++++++++++++++++++++++++++++++++
2. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413424 (CHOICE (SYMBOL hash_bang_line) | (BLANK))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (BLANK)
_is_possible_prod_for_ex_contin ELEM  ['"js.lexical_declaration"', ['"*1"', 3]]
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 'EMPTY']
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413424 (CHOICE (SYMBOL hash_bang_line) | (BLANK))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 3. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413664 (BLANK)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 4 ++++++++++++++++++++++++++++++++++++++++++
3. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413664 (BLANK)) c_idx(0) s_idx(0)) =>...
# match BLANK.

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 5 ++++++++++++++++++++++++++++++++++++++++++
4. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(1)) =>...
>> _seq_tail: 5. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413744 (REPEAT (SYMBOL statement))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 10  _tail_stack: 6 ++++++++++++++++++++++++++++++++++++++++++
5. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413744 (REPEAT (SYMBOL statement))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 11  _tail_stack: 7 ++++++++++++++++++++++++++++++++++++++++++
6. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413264 (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement)))) c_idx(0) s_idx(2)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 12  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  None
# _set_grm_back_tracking at depth (1) ....... (# CURRENT PARSING CANNOT FINISH EXPANSIONS. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 13  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++

 ++++++++++++++++++++++++++++++++++++++++++ 14  _tail_stack: 7 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SEQ (CHOICE (SYMBOL hash_bang_line) | (BLANK)) (REPEAT (SYMBOL statement))) 0 2
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 15  _tail_stack: 6 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (REPEAT (SYMBOL statement)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: REPEAT 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 16  _tail_stack: 6 ++++++++++++++++++++++++++++++++++++++++++
5. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413744 (REPEAT (SYMBOL statement))) c_idx(1) s_idx(0)) =>...
>> _rep_tryone_tail: 6. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413824 (SYMBOL statement)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 17  _tail_stack: 7 ++++++++++++++++++++++++++++++++++++++++++
6. None  |  []  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888413824 (SYMBOL statement)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 18  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL export_statement)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453088 (SYMBOL export_statement)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 19  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453088 (SYMBOL export_statement)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.export_statement")

 ++++++++++++++++++++++++++++++++++++++++++ 20  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL export_statement) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 21  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 22  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL import_statement)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453248 (SYMBOL import_statement)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 23  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453248 (SYMBOL import_statement)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.import_statement")

 ++++++++++++++++++++++++++++++++++++++++++ 24  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL import_statement) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 25  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 26  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(2) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL debugger_statement)
$$$ _get_specified_rep_or_cho_frame cho_idx= 2 -1. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(2) s_idx(0)) =>...
>> _cho_trycurrent_tail: 8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453408 (SYMBOL debugger_statement)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 27  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453408 (SYMBOL debugger_statement)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.debugger_statement")

 ++++++++++++++++++++++++++++++++++++++++++ 28  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL debugger_statement) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 29  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement)) 2 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 3
BACKTRACKING.NEXT: CHOICE 2 -> 3

 ++++++++++++++++++++++++++++++++++++++++++ 30  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(3) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL expression_statement)
$$$ _get_specified_rep_or_cho_frame cho_idx= 3 -1. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(3) s_idx(0)) =>...
>> _cho_trycurrent_tail: 8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453568 (SYMBOL expression_statement)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 31  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453568 (SYMBOL expression_statement)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.expression_statement")

 ++++++++++++++++++++++++++++++++++++++++++ 32  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL expression_statement) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 33  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement)) 3 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 4
BACKTRACKING.NEXT: CHOICE 3 -> 4

 ++++++++++++++++++++++++++++++++++++++++++ 34  _tail_stack: 8 ++++++++++++++++++++++++++++++++++++++++++
7. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(4) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL declaration)
$$$ _get_specified_rep_or_cho_frame cho_idx= 4 -1. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888452928 (CHOICE (SYMBOL export_statement) | (SYMBOL import_statement) | (SYMBOL debugger_statement) | (SYMBOL expression_statement) | (SYMBOL declaration) | (SYMBOL statement_block) | (SYMBOL if_statement) | (SYMBOL switch_statement) | (SYMBOL for_statement) | (SYMBOL for_in_statement) | (SYMBOL while_statement) | (SYMBOL do_statement) | (SYMBOL try_statement) | (SYMBOL with_statement) | (SYMBOL break_statement) | (SYMBOL continue_statement) | (SYMBOL return_statement) | (SYMBOL throw_statement) | (SYMBOL empty_statement) | (SYMBOL labeled_statement))) c_idx(4) s_idx(0)) =>...
>> _cho_trycurrent_tail: 8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453728 (SYMBOL declaration)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 35  _tail_stack: 9 ++++++++++++++++++++++++++++++++++++++++++
8. None  |  ['statement']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888453728 (SYMBOL declaration)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 9. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 36  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
9. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL function_declaration)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442016 (SYMBOL function_declaration)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 37  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442016 (SYMBOL function_declaration)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.function_declaration")

 ++++++++++++++++++++++++++++++++++++++++++ 38  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL function_declaration) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 39  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 40  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
9. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL generator_function_declaration)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442176 (SYMBOL generator_function_declaration)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 41  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442176 (SYMBOL generator_function_declaration)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.generator_function_declaration")

 ++++++++++++++++++++++++++++++++++++++++++ 42  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL generator_function_declaration) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 43  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 44  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
9. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(2) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL class_declaration)
$$$ _get_specified_rep_or_cho_frame cho_idx= 2 -1. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(2) s_idx(0)) =>...
>> _cho_trycurrent_tail: 10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442336 (SYMBOL class_declaration)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 45  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442336 (SYMBOL class_declaration)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)

# _set_grm_back_tracking at depth (1) ....... (# symbol/aliased mismatch: "js.lexical_declaration" != "js.class_declaration")

 ++++++++++++++++++++++++++++++++++++++++++ 46  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (SYMBOL class_declaration) 0 0
BACKTRACKING.POP  1

 ++++++++++++++++++++++++++++++++++++++++++ 47  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 1)------- (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration)) 2 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 3
BACKTRACKING.NEXT: CHOICE 2 -> 3

 ++++++++++++++++++++++++++++++++++++++++++ 48  _tail_stack: 10 ++++++++++++++++++++++++++++++++++++++++++
9. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(3) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL lexical_declaration)
$$$ _get_specified_rep_or_cho_frame cho_idx= 3 -1. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888429472 (CHOICE (SYMBOL function_declaration) | (SYMBOL generator_function_declaration) | (SYMBOL class_declaration) | (SYMBOL lexical_declaration) | (SYMBOL variable_declaration))) c_idx(3) s_idx(0)) =>...
>> _cho_trycurrent_tail: 10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442496 (SYMBOL lexical_declaration)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 49  _tail_stack: 11 ++++++++++++++++++++++++++++++++++++++++++
10. None  |  ['statement', 'declaration']  \\\  (EXC ntdepth(1) eid(2) frag(['fragment', ['"js.lexical_declaration"', ['"*1"', 3]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(1) pid(0) prod(140354888442496 (SYMBOL lexical_declaration)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.lexical_declaration"', ['"*1"', 3]] (1 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.lexical_declaration" ex_nt_depth: 1 -> 2 11. [1, 0, 'NT', '"js.lexical_declaration"']  |  []  \\\  (EXC ntdepth(2) eid(2) frag(['"js.lexical_declaration"', ['"*1"', 3]]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 50  _tail_stack: 12 ++++++++++++++++++++++++++++++++++++++++++
11. [1, 0, 'NT', '"js.lexical_declaration"']  |  []  \\\  (EXC ntdepth(2) eid(2) frag(['"js.lexical_declaration"', ['"*1"', 3]]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(0)) =>...
# Stuck!!! stacksize: 12
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 2 apply_expand_func SUCCEED on exid:2 (corres_slot_id:2)


############## _expand_loop 3 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 2, 'alt_step': 2, 'expansion': (Expansion ex:2, corres:2), 'choose_idx': 0, 'prev_alt_id': 1, 'todo_slot_ids': [3], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:2) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:3 belong_ex:2))
_try_match_rec mismatch: js.variable_declarator js.for_in_statement
_try_match_rec mismatch: js.variable_declarator js.identifier
_try_match_rec mismatch: js.variable_declarator js.property_identifier
_try_match_rec mismatch: js.variable_declarator js.string
_try_match_rec mismatch: js.variable_declarator js.string_fragment
_try_match_rec mismatch: js.variable_declarator js.number
_try_match_rec ARBITRARY MATCHED! nice. js.variable_declarator
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 4  belong_ex_id: 3
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]
# _possible_expansion_iter_gen matched! (Slot id:3 belong_ex:2) (Expansion ex:3, corres:3)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:3, corres:3)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 12 ++++++++++++++++++++++++++++++++++++++++++
11. [1, 0, 'NT', '"js.lexical_declaration"']  |  []  \\\  (EXC ntdepth(2) eid(2) frag(['"js.lexical_declaration"', ['"*1"', 3]]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 11. [1, 0, 'NT', '"js.lexical_declaration"']  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 12 ++++++++++++++++++++++++++++++++++++++++++
11. [1, 0, 'NT', '"js.lexical_declaration"']  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 12. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469632 (FIELD kind (CHOICE (STR let) | (STR const)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 13 ++++++++++++++++++++++++++++++++++++++++++
12. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469632 (FIELD kind (CHOICE (STR let) | (STR const)))) c_idx(0) s_idx(0)) =>...
>> _field_prod_tail: 13. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469712 (CHOICE (STR let) | (STR const))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 14 ++++++++++++++++++++++++++++++++++++++++++
13. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469712 (CHOICE (STR let) | (STR const))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (STR let)
_is_possible_prod_for_ex_contin ELEM  ['str', '"let"']
_is_possible_prod_for_ex_contin ELEM  ['"js.variable_declarator"', ['"*1"', 4]]
_is_possible_prod_for_ex_contin ELEM  ['str', '";"']
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 'EMPTY']
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469712 (CHOICE (STR let) | (STR const))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 14. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469872 (STR let)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 15 ++++++++++++++++++++++++++++++++++++++++++
14. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469872 (STR let)) c_idx(0) s_idx(0)) =>...
>> _add_match_str_tail: let 15. [None, 1, 'T', 'let']  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 16 ++++++++++++++++++++++++++++++++++++++++++
15. [None, 1, 'T', 'let']  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888469472 (SEQ (FIELD kind (CHOICE (STR let) | (STR const))) (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator)))) (SYMBOL _semicolon))) c_idx(0) s_idx(1)) =>...
>> _seq_tail: 16. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888470032 (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator))))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 17 ++++++++++++++++++++++++++++++++++++++++++
16. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888470032 (SEQ (SYMBOL variable_declarator) (REPEAT (SEQ (STR ,) (SYMBOL variable_declarator))))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 17. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888470192 (SYMBOL variable_declarator)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 18 ++++++++++++++++++++++++++++++++++++++++++
17. None  |  []  \\\  (EXC ntdepth(2) eid(3) frag(['fragment', ['str', '"let"'], ['"js.variable_declarator"', ['"*1"', 4]], ['str', '";"'], ['"*2"', 'EMPTY']]) fidx(2)) =>...  ///  (GRC ntdepth(2) pid(1) prod(140354888470192 (SYMBOL variable_declarator)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.variable_declarator"', ['"*1"', 4]] (2 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.variable_declarator" ex_nt_depth: 2 -> 3 18. [2, 1, 'NT', '"js.variable_declarator"']  |  []  \\\  (EXC ntdepth(3) eid(3) frag(['"js.variable_declarator"', ['"*1"', 4]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 19 ++++++++++++++++++++++++++++++++++++++++++
18. [2, 1, 'NT', '"js.variable_declarator"']  |  []  \\\  (EXC ntdepth(3) eid(3) frag(['"js.variable_declarator"', ['"*1"', 4]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(0)) =>...
# Stuck!!! stacksize: 19
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 3 apply_expand_func SUCCEED on exid:3 (corres_slot_id:3)


############## _expand_loop 4 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 3, 'alt_step': 3, 'expansion': (Expansion ex:3, corres:3), 'choose_idx': 0, 'prev_alt_id': 2, 'todo_slot_ids': [4], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:3) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:4 belong_ex:3))
_try_match_rec mismatch: js.identifier js.for_in_statement
_try_match_rec MATCHED! nice. js.identifier
# Expansion create: ['fragment', '"_liststr1_"', ['"js.identifier"', '"_val1_"'], '"_liststr2_"', '"*1"']
# Slot create: 5  belong_ex_id: 4
# _fill copy-and-fill-expand fill_count: 4 ['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]
# _possible_expansion_iter_gen matched! (Slot id:4 belong_ex:3) (Expansion ex:4, corres:4)
_try_match_rec mismatch: js.identifier js.property_identifier
_try_match_rec mismatch: js.identifier js.string
_try_match_rec mismatch: js.identifier js.string_fragment
_try_match_rec mismatch: js.identifier js.number
_try_match_rec ARBITRARY MATCHED! nice. js.identifier
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 6  belong_ex_id: 5
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['"js.identifier"', ['"*1"', 'EMPTY']], ['str', '"="'], ['"*2"', 6]]
# _possible_expansion_iter_gen matched! (Slot id:4 belong_ex:3) (Expansion ex:5, corres:4)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:4, corres:4)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 19 ++++++++++++++++++++++++++++++++++++++++++
18. [2, 1, 'NT', '"js.variable_declarator"']  |  []  \\\  (EXC ntdepth(3) eid(3) frag(['"js.variable_declarator"', ['"*1"', 4]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 18. [2, 1, 'NT', '"js.variable_declarator"']  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 19 ++++++++++++++++++++++++++++++++++++++++++
18. [2, 1, 'NT', '"js.variable_declarator"']  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 19. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479440 (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 20 ++++++++++++++++++++++++++++++++++++++++++
19. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479440 (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern)))) c_idx(0) s_idx(0)) =>...
>> _field_prod_tail: 20. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479520 (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 21 ++++++++++++++++++++++++++++++++++++++++++
20. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479520 (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]
    --- PRETTY PROD: (SYMBOL identifier)
_is_possible_prod_for_ex_contin ELEM  ['"js.identifier"', ['"_val1_"', '"a"']]
_is_possible_prod_for_ex_contin ELEM  ['str', '"="']
_is_possible_prod_for_ex_contin ELEM  ['"*1"', 5]
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479520 (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 21. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479680 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 22 ++++++++++++++++++++++++++++++++++++++++++
21. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479680 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.identifier"', ['"_val1_"', '"a"']] (1 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.identifier" ex_nt_depth: 3 -> 4 22. [3, 2, 'NT', '"js.identifier"']  |  []  \\\  (EXC ntdepth(4) eid(4) frag(['"js.identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(3) prod(140354887885200 (TOKEN ...)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 23 ++++++++++++++++++++++++++++++++++++++++++
22. [3, 2, 'NT', '"js.identifier"']  |  []  \\\  (EXC ntdepth(4) eid(4) frag(['"js.identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(3) prod(140354887885200 (TOKEN ...)) c_idx(0) s_idx(0)) =>...
>> _add_match_val_tail: "a" 23. [None, 3, 'V', '"a"']  |  []  \\\  (EXC ntdepth(4) eid(4) frag(['"js.identifier"', ['"_val1_"', '"a"']]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 24 ++++++++++++++++++++++++++++++++++++++++++
23. [None, 3, 'V', '"a"']  |  []  \\\  (EXC ntdepth(4) eid(4) frag(['"js.identifier"', ['"_val1_"', '"a"']]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(1)) =>...
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ FINISH fragment.

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 24 ++++++++++++++++++++++++++++++++++++++++++
23. [None, 3, 'V', '"a"']  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479280 (SEQ (FIELD name (CHOICE (SYMBOL identifier) | (SYMBOL _destructuring_pattern))) (CHOICE (SYMBOL _initializer) | (BLANK)))) c_idx(0) s_idx(1)) =>...
>> _seq_tail: 24. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479920 (CHOICE (SYMBOL _initializer) | (BLANK))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 25 ++++++++++++++++++++++++++++++++++++++++++
24. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479920 (CHOICE (SYMBOL _initializer) | (BLANK))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 2 ['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]
    --- PRETTY PROD: (SYMBOL _initializer)
_is_possible_prod_for_ex_contin ELEM  ['str', '"="']
_is_possible_prod_for_ex_contin ELEM  ['"*1"', 5]
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888479920 (CHOICE (SYMBOL _initializer) | (BLANK))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 25. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888480080 (SYMBOL _initializer)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 10  _tail_stack: 26 ++++++++++++++++++++++++++++++++++++++++++
25. None  |  []  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888480080 (SYMBOL _initializer)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 26. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 11  _tail_stack: 27 ++++++++++++++++++++++++++++++++++++++++++
26. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 27. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222912 (STR =)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 12  _tail_stack: 28 ++++++++++++++++++++++++++++++++++++++++++
27. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(2)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222912 (STR =)) c_idx(0) s_idx(0)) =>...
>> _add_match_str_tail: = 28. [None, 2, 'T', '=']  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(3)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 13  _tail_stack: 29 ++++++++++++++++++++++++++++++++++++++++++
28. [None, 2, 'T', '=']  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(3)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# Stuck!!! stacksize: 29
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 4 apply_expand_func SUCCEED on exid:4 (corres_slot_id:4)


############## _expand_loop 5 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 4, 'alt_step': 4, 'expansion': (Expansion ex:4, corres:4), 'choose_idx': 0, 'prev_alt_id': 3, 'todo_slot_ids': [5], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:4) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:5 belong_ex:4))
_try_match_rec mismatch: js.object js.for_in_statement
_try_match_rec mismatch: js.object js.identifier
_try_match_rec mismatch: js.object js.property_identifier
_try_match_rec mismatch: js.object js.string
_try_match_rec mismatch: js.object js.string_fragment
_try_match_rec mismatch: js.object js.number
_try_match_rec ARBITRARY MATCHED! nice. js.object
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 7  belong_ex_id: 6
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
# _possible_expansion_iter_gen matched! (Slot id:5 belong_ex:4) (Expansion ex:6, corres:5)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:6, corres:5)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 29 ++++++++++++++++++++++++++++++++++++++++++
28. [None, 2, 'T', '=']  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(4) frag(['fragment', ['"js.identifier"', ['"_val1_"', '"a"']], ['str', '"="'], ['"*1"', 5]]) fidx(3)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
>> _wildcard_goto_expansion_tail_replace: 28. [None, 2, 'T', '=']  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 29 ++++++++++++++++++++++++++++++++++++++++++
28. [None, 2, 'T', '=']  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222752 (SEQ (STR =) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
>> _seq_tail: 29. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222992 (FIELD value (SYMBOL expression))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 30 ++++++++++++++++++++++++++++++++++++++++++
29. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888222992 (FIELD value (SYMBOL expression))) c_idx(0) s_idx(0)) =>...
>> _field_prod_tail: 30. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888223072 (SYMBOL expression)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 31 ++++++++++++++++++++++++++++++++++++++++++
30. None  |  ['_initializer']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888223072 (SYMBOL expression)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 31. None  |  ['_initializer', 'expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888560720 (CHOICE (SYMBOL primary_expression) | (SYMBOL _jsx_element) | (SYMBOL jsx_fragment) | (SYMBOL assignment_expression) | (SYMBOL augmented_assignment_expression) | (SYMBOL await_expression) | (SYMBOL unary_expression) | (SYMBOL binary_expression) | (SYMBOL ternary_expression) | (SYMBOL update_expression) | (SYMBOL new_expression) | (SYMBOL yield_expression))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 32 ++++++++++++++++++++++++++++++++++++++++++
31. None  |  ['_initializer', 'expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888560720 (CHOICE (SYMBOL primary_expression) | (SYMBOL _jsx_element) | (SYMBOL jsx_fragment) | (SYMBOL assignment_expression) | (SYMBOL augmented_assignment_expression) | (SYMBOL await_expression) | (SYMBOL unary_expression) | (SYMBOL binary_expression) | (SYMBOL ternary_expression) | (SYMBOL update_expression) | (SYMBOL new_expression) | (SYMBOL yield_expression))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL primary_expression)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['_initializer', 'expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888560720 (CHOICE (SYMBOL primary_expression) | (SYMBOL _jsx_element) | (SYMBOL jsx_fragment) | (SYMBOL assignment_expression) | (SYMBOL augmented_assignment_expression) | (SYMBOL await_expression) | (SYMBOL unary_expression) | (SYMBOL binary_expression) | (SYMBOL ternary_expression) | (SYMBOL update_expression) | (SYMBOL new_expression) | (SYMBOL yield_expression))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 32. None  |  ['_initializer', 'expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888560880 (SYMBOL primary_expression)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 33 ++++++++++++++++++++++++++++++++++++++++++
32. None  |  ['_initializer', 'expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888560880 (SYMBOL primary_expression)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL subscript_expression)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562800 (SYMBOL subscript_expression)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562800 (SYMBOL subscript_expression)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.subscript_expression")

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL subscript_expression) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 10  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 11  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL member_expression)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562960 (SYMBOL member_expression)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 12  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562960 (SYMBOL member_expression)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.member_expression")

 ++++++++++++++++++++++++++++++++++++++++++ 13  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL member_expression) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 14  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 15  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(2) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL parenthesized_expression)
$$$ _get_specified_rep_or_cho_frame cho_idx= 2 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(2) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563120 (SYMBOL parenthesized_expression)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 16  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563120 (SYMBOL parenthesized_expression)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.parenthesized_expression")

 ++++++++++++++++++++++++++++++++++++++++++ 17  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL parenthesized_expression) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 18  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 2 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 3
BACKTRACKING.NEXT: CHOICE 2 -> 3

 ++++++++++++++++++++++++++++++++++++++++++ 19  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(3) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL _identifier)
$$$ _get_specified_rep_or_cho_frame cho_idx= 3 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(3) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563280 (SYMBOL _identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 20  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563280 (SYMBOL _identifier)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 35. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 21  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL undefined)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 36. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887885040 (SYMBOL undefined)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 22  _tail_stack: 37 ++++++++++++++++++++++++++++++++++++++++++
36. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887885040 (SYMBOL undefined)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.undefined")

 ++++++++++++++++++++++++++++++++++++++++++ 23  _tail_stack: 37 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL undefined) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 24  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL undefined) | (SYMBOL identifier)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 25  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL identifier)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 36. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887885120 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 26  _tail_stack: 37 ++++++++++++++++++++++++++++++++++++++++++
36. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887885120 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.identifier")

 ++++++++++++++++++++++++++++++++++++++++++ 27  _tail_stack: 37 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL identifier) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 28  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL undefined) | (SYMBOL identifier)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 29  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(2) s_idx(0)) =>...
@@@@@@@@  NULLIFY last frame grm nullified. -1. None  |  ['_initializer', 'expression', 'primary_expression', '_identifier']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354887884960 (CHOICE (SYMBOL undefined) | (SYMBOL identifier))) c_idx(-1) s_idx(0)) =>...
# _set_grm_back_tracking at depth (3) ....... (CHOICE out of index 2/2. nullified and backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 30  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL undefined) | (SYMBOL identifier)) -1 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 31  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL _identifier) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 32  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 3 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 4
BACKTRACKING.NEXT: CHOICE 3 -> 4

 ++++++++++++++++++++++++++++++++++++++++++ 33  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(4) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (ALIAS True identifier (SYMBOL _reserved_identifier))
$$$ _get_specified_rep_or_cho_frame cho_idx= 4 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(4) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563360 (ALIAS True identifier (SYMBOL _reserved_identifier))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 34  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563360 (ALIAS True identifier (SYMBOL _reserved_identifier))) c_idx(0) s_idx(0)) =>...
ALIAS prod is SYMBOL. Prod jump to _reserved_identifier's prod.
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.identifier")

 ++++++++++++++++++++++++++++++++++++++++++ 35  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (ALIAS True identifier (SYMBOL _reserved_identifier)) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 36  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 4 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 5
BACKTRACKING.NEXT: CHOICE 4 -> 5

 ++++++++++++++++++++++++++++++++++++++++++ 37  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(5) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL this)
$$$ _get_specified_rep_or_cho_frame cho_idx= 5 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(5) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563600 (SYMBOL this)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 38  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563600 (SYMBOL this)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.this")

 ++++++++++++++++++++++++++++++++++++++++++ 39  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL this) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 40  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 5 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 6
BACKTRACKING.NEXT: CHOICE 5 -> 6

 ++++++++++++++++++++++++++++++++++++++++++ 41  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(6) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL super)
$$$ _get_specified_rep_or_cho_frame cho_idx= 6 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(6) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563680 (SYMBOL super)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 42  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563680 (SYMBOL super)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.super")

 ++++++++++++++++++++++++++++++++++++++++++ 43  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL super) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 44  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 6 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 7
BACKTRACKING.NEXT: CHOICE 6 -> 7

 ++++++++++++++++++++++++++++++++++++++++++ 45  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(7) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL number)
$$$ _get_specified_rep_or_cho_frame cho_idx= 7 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(7) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563760 (SYMBOL number)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 46  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563760 (SYMBOL number)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.number")

 ++++++++++++++++++++++++++++++++++++++++++ 47  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL number) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 48  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 7 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 8
BACKTRACKING.NEXT: CHOICE 7 -> 8

 ++++++++++++++++++++++++++++++++++++++++++ 49  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(8) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL string)
$$$ _get_specified_rep_or_cho_frame cho_idx= 8 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(8) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563840 (SYMBOL string)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 50  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563840 (SYMBOL string)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.string")

 ++++++++++++++++++++++++++++++++++++++++++ 51  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL string) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 52  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 8 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 9
BACKTRACKING.NEXT: CHOICE 8 -> 9

 ++++++++++++++++++++++++++++++++++++++++++ 53  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(9) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL template_string)
$$$ _get_specified_rep_or_cho_frame cho_idx= 9 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(9) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563920 (SYMBOL template_string)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 54  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888563920 (SYMBOL template_string)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.template_string")

 ++++++++++++++++++++++++++++++++++++++++++ 55  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL template_string) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 56  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 9 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 10
BACKTRACKING.NEXT: CHOICE 9 -> 10

 ++++++++++++++++++++++++++++++++++++++++++ 57  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(10) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL regex)
$$$ _get_specified_rep_or_cho_frame cho_idx= 10 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(10) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564000 (SYMBOL regex)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 58  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564000 (SYMBOL regex)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.regex")

 ++++++++++++++++++++++++++++++++++++++++++ 59  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL regex) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 60  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 10 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 11
BACKTRACKING.NEXT: CHOICE 10 -> 11

 ++++++++++++++++++++++++++++++++++++++++++ 61  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(11) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL true)
$$$ _get_specified_rep_or_cho_frame cho_idx= 11 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(11) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564080 (SYMBOL true)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 62  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564080 (SYMBOL true)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.true")

 ++++++++++++++++++++++++++++++++++++++++++ 63  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL true) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 64  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 11 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 12
BACKTRACKING.NEXT: CHOICE 11 -> 12

 ++++++++++++++++++++++++++++++++++++++++++ 65  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(12) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL false)
$$$ _get_specified_rep_or_cho_frame cho_idx= 12 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(12) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564160 (SYMBOL false)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 66  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564160 (SYMBOL false)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.false")

 ++++++++++++++++++++++++++++++++++++++++++ 67  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL false) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 68  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 12 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 13
BACKTRACKING.NEXT: CHOICE 12 -> 13

 ++++++++++++++++++++++++++++++++++++++++++ 69  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(13) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL null)
$$$ _get_specified_rep_or_cho_frame cho_idx= 13 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(13) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564240 (SYMBOL null)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 70  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564240 (SYMBOL null)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.null")

 ++++++++++++++++++++++++++++++++++++++++++ 71  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL null) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 72  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 13 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 14
BACKTRACKING.NEXT: CHOICE 13 -> 14

 ++++++++++++++++++++++++++++++++++++++++++ 73  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(14) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL import)
$$$ _get_specified_rep_or_cho_frame cho_idx= 14 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(14) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564320 (SYMBOL import)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 74  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564320 (SYMBOL import)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)

# _set_grm_back_tracking at depth (3) ....... (# symbol/aliased mismatch: "js.object" != "js.import")

 ++++++++++++++++++++++++++++++++++++++++++ 75  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (SYMBOL import) 0 0
BACKTRACKING.POP  3

 ++++++++++++++++++++++++++++++++++++++++++ 76  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 3)------- (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression)) 14 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 15
BACKTRACKING.NEXT: CHOICE 14 -> 15

 ++++++++++++++++++++++++++++++++++++++++++ 77  _tail_stack: 34 ++++++++++++++++++++++++++++++++++++++++++
33. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(15) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]
    --- PRETTY PROD: (SYMBOL object)
$$$ _get_specified_rep_or_cho_frame cho_idx= 15 -1. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888562640 (CHOICE (SYMBOL subscript_expression) | (SYMBOL member_expression) | (SYMBOL parenthesized_expression) | (SYMBOL _identifier) | (ALIAS True identifier (SYMBOL _reserved_identifier)) | (SYMBOL this) | (SYMBOL super) | (SYMBOL number) | (SYMBOL string) | (SYMBOL template_string) | (SYMBOL regex) | (SYMBOL true) | (SYMBOL false) | (SYMBOL null) | (SYMBOL import) | (SYMBOL object) | (SYMBOL array) | (SYMBOL function) | (SYMBOL arrow_function) | (SYMBOL generator_function) | (SYMBOL class) | (SYMBOL meta_property) | (SYMBOL call_expression))) c_idx(15) s_idx(0)) =>...
>> _cho_trycurrent_tail: 34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564400 (SYMBOL object)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 78  _tail_stack: 35 ++++++++++++++++++++++++++++++++++++++++++
34. None  |  ['_initializer', 'expression', 'primary_expression']  \\\  (EXC ntdepth(3) eid(6) frag(['fragment', ['"js.object"', ['"*1"', 7]], ['"*2"', 'EMPTY']]) fidx(1)) =>...  ///  (GRC ntdepth(3) pid(2) prod(140354888564400 (SYMBOL object)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.object"', ['"*1"', 7]] (1 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.object" ex_nt_depth: 3 -> 4 35. [4, 2, 'NT', '"js.object"']  |  []  \\\  (EXC ntdepth(4) eid(6) frag(['"js.object"', ['"*1"', 7]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578704 (PREC object (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR })))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 79  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. [4, 2, 'NT', '"js.object"']  |  []  \\\  (EXC ntdepth(4) eid(6) frag(['"js.object"', ['"*1"', 7]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578704 (PREC object (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR })))) c_idx(0) s_idx(0)) =>...
# Stuck!!! stacksize: 36
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 5 apply_expand_func SUCCEED on exid:6 (corres_slot_id:5)


############## _expand_loop 6 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 5, 'alt_step': 5, 'expansion': (Expansion ex:6, corres:5), 'choose_idx': 0, 'prev_alt_id': 4, 'todo_slot_ids': [7], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:5) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:7 belong_ex:6))
_try_match_rec mismatch: js.pair js.for_in_statement
_try_match_rec mismatch: js.pair js.identifier
_try_match_rec mismatch: js.pair js.property_identifier
_try_match_rec mismatch: js.pair js.string
_try_match_rec mismatch: js.pair js.string_fragment
_try_match_rec mismatch: js.pair js.number
_try_match_rec ARBITRARY MATCHED! nice. js.pair
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 8  belong_ex_id: 7
# Slot create: 9  belong_ex_id: 7
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]
# _possible_expansion_iter_gen matched! (Slot id:7 belong_ex:6) (Expansion ex:7, corres:7)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:7, corres:7)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. [4, 2, 'NT', '"js.object"']  |  []  \\\  (EXC ntdepth(4) eid(6) frag(['"js.object"', ['"*1"', 7]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578704 (PREC object (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR })))) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 35. [4, 2, 'NT', '"js.object"']  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578704 (PREC object (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR })))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 36 ++++++++++++++++++++++++++++++++++++++++++
35. [4, 2, 'NT', '"js.object"']  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578704 (PREC object (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR })))) c_idx(0) s_idx(0)) =>...
>> _prec_prod_tail: PREC object 36. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578784 (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR }))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 37 ++++++++++++++++++++++++++++++++++++++++++
36. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578784 (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR }))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 37. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578944 (STR {)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 38 ++++++++++++++++++++++++++++++++++++++++++
37. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(1)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578944 (STR {)) c_idx(0) s_idx(0)) =>...
>> _add_match_str_tail: { 38. [None, 4, 'T', '{']  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578784 (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR }))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 39 ++++++++++++++++++++++++++++++++++++++++++
38. [None, 4, 'T', '{']  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888578784 (SEQ (STR {) (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK)) (STR }))) c_idx(0) s_idx(1)) =>...
>> _seq_tail: 39. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579024 (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 40 ++++++++++++++++++++++++++++++++++++++++++
39. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579024 (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 2 ['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]
    --- PRETTY PROD: (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)))))
_is_possible_prod_for_ex_contin ELEM  ['"js.pair"', ['"*1"', 8]]
_is_possible_prod_for_ex_contin ELEM  ['str', '","']
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 9]
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579024 (CHOICE (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))))) | (BLANK))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 40. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579184 (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)))))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 41 ++++++++++++++++++++++++++++++++++++++++++
40. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579184 (SEQ (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)) (REPEAT (SEQ (STR ,) (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK)))))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 41. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579344 (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 42 ++++++++++++++++++++++++++++++++++++++++++
41. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579344 (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 2 ['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]
    --- PRETTY PROD: (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))))
_is_possible_prod_for_ex_contin ELEM  ['"js.pair"', ['"*1"', 8]]
_is_possible_prod_for_ex_contin ELEM  ['str', '","']
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 9]
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579344 (CHOICE (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) | (BLANK))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 42. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579504 (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 43 ++++++++++++++++++++++++++++++++++++++++++
42. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579504 (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 2 ['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]
    --- PRETTY PROD: (SYMBOL pair)
_is_possible_prod_for_ex_contin ELEM  ['"js.pair"', ['"*1"', 8]]
_is_possible_prod_for_ex_contin ELEM  ['str', '","']
_is_possible_prod_for_ex_contin ELEM  ['"*2"', 9]
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579504 (CHOICE (SYMBOL pair) | (SYMBOL spread_element) | (SYMBOL method_definition) | (ALIAS True shorthand_property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 43. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579664 (SYMBOL pair)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 10  _tail_stack: 44 ++++++++++++++++++++++++++++++++++++++++++
43. None  |  []  \\\  (EXC ntdepth(4) eid(7) frag(['fragment', ['str', '"{"'], ['"js.pair"', ['"*1"', 8]], ['str', '","'], ['"*2"', 9]]) fidx(2)) =>...  ///  (GRC ntdepth(4) pid(4) prod(140354888579664 (SYMBOL pair)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.pair"', ['"*1"', 8]] (2 of parent)
symbol/aliased matching expand elem! SYMBOL
>> _add_NT_tail: "js.pair" ex_nt_depth: 4 -> 5 44. [5, 4, 'NT', '"js.pair"']  |  []  \\\  (EXC ntdepth(5) eid(7) frag(['"js.pair"', ['"*1"', 8]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 11  _tail_stack: 45 ++++++++++++++++++++++++++++++++++++++++++
44. [5, 4, 'NT', '"js.pair"']  |  []  \\\  (EXC ntdepth(5) eid(7) frag(['"js.pair"', ['"*1"', 8]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...
# Stuck!!! stacksize: 45
# _get_or_create_next_alt_func PARSE is_acceptable: True  is_done: False
************** _expand_loop 6 apply_expand_func SUCCEED on exid:7 (corres_slot_id:7)


############## _expand_loop 7 ... 
# _get_or_create_next_alt_func. alt_node: {'alt_id': 6, 'alt_step': 6, 'expansion': (Expansion ex:7, corres:7), 'choose_idx': 0, 'prev_alt_id': 5, 'todo_slot_ids': [8, 9], 'next_choices_status': {'count': 0, 'done': False}, 'next_alt_choose_dict': {}, 'is_all_rejected': False, 'is_checkpoint': False}
_get_or_create_alt_node prev_alt (id:6) 0 ...
_possible_expansion_iter_gen slot: ((Slot id:8 belong_ex:7))
_try_match_rec mismatch: js.property_identifier js.for_in_statement
_try_match_rec mismatch: js.property_identifier js.identifier
_try_match_rec MATCHED! nice. js.property_identifier
# Expansion create: ['fragment', '"_liststr1_"', ['"js.property_identifier"', '"_val1_"'], '"_liststr2_"', '"*1"']
# Slot create: 10  belong_ex_id: 8
# _fill copy-and-fill-expand fill_count: 4 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
# _possible_expansion_iter_gen matched! (Slot id:8 belong_ex:7) (Expansion ex:8, corres:8)
_try_match_rec mismatch: js.property_identifier js.string
_try_match_rec mismatch: js.property_identifier js.string_fragment
_try_match_rec mismatch: js.property_identifier js.number
_try_match_rec ARBITRARY MATCHED! nice. js.property_identifier
# Expansion create: ['fragment', '"_liststr1_"', ['"_anynt1_"', '"*1"'], '"_liststr2_"', '"*2"']
# Slot create: 11  belong_ex_id: 9
# _fill copy-and-fill-expand fill_count: 5 ['fragment', ['"js.property_identifier"', ['"*1"', 'EMPTY']], ['str', '":"'], ['"*2"', 11]]
# _possible_expansion_iter_gen matched! (Slot id:8 belong_ex:7) (Expansion ex:9, corres:8)
===============================
# add_expansion_parse_until_stuck. (Expansion ex:8, corres:8)

 ++++++++++++++++++++++++++++++++++++++++++ 1  _tail_stack: 45 ++++++++++++++++++++++++++++++++++++++++++
44. [5, 4, 'NT', '"js.pair"']  |  []  \\\  (EXC ntdepth(5) eid(7) frag(['"js.pair"', ['"*1"', 8]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...
>> _wildcard_goto_expansion_tail_replace: 44. [5, 4, 'NT', '"js.pair"']  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 2  _tail_stack: 45 ++++++++++++++++++++++++++++++++++++++++++
44. [5, 4, 'NT', '"js.pair"']  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(0)) =>...
>> _seq_tail: 45. None  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942464 (FIELD key (SYMBOL _property_name))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 3  _tail_stack: 46 ++++++++++++++++++++++++++++++++++++++++++
45. None  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942464 (FIELD key (SYMBOL _property_name))) c_idx(0) s_idx(0)) =>...
>> _field_prod_tail: 46. None  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942544 (SYMBOL _property_name)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 4  _tail_stack: 47 ++++++++++++++++++++++++++++++++++++++++++
46. None  |  []  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942544 (SYMBOL _property_name)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 5  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
    --- PRETTY PROD: (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943904 (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 6  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943904 (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)))) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.property_identifier"', ['"_val1_"', '"a"']] (1 of parent)
symbol/aliased matching expand elem! ALIAS
>> _add_NT_tail: "js.property_identifier" ex_nt_depth: 5 -> 6 49. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 7  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
49. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (SYMBOL identifier)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 50. None  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887944144 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 8  _tail_stack: 51 ++++++++++++++++++++++++++++++++++++++++++
50. None  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887944144 (SYMBOL identifier)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"_val1_"', '"a"'] (1 of parent)
# _set_grm_back_tracking at depth (6) ....... (symbol/aliased current elem_nt_name is not NT, but val or str: ['"_val1_"', '"a"'] BACKTRACKING...)

 ++++++++++++++++++++++++++++++++++++++++++ 9  _tail_stack: 51 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (SYMBOL identifier) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 10  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 11  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
49. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (SYMBOL _reserved_identifier)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 50. None  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887944224 (SYMBOL _reserved_identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 12  _tail_stack: 51 ++++++++++++++++++++++++++++++++++++++++++
50. None  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887944224 (SYMBOL _reserved_identifier)) c_idx(0) s_idx(0)) =>...
>> _inlined_prod_tail: 51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 13  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(0) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (STR get)
$$$ _get_specified_rep_or_cho_frame cho_idx= 0 -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(0) s_idx(0)) =>...
>> _cho_trycurrent_tail: 52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945664 (STR get)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 14  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945664 (STR get)) c_idx(0) s_idx(0)) =>...
>> _add_str_tail: get 53. [None, 6, 'T', 'get']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 15  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
53. [None, 6, 'T', 'get']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# _set_grm_back_tracking at depth (6) ....... (# CURRENT PARSING DEPTH WRONG. ex:6 grm:5. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 16  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 1
# Backtracking.POP SKIP for depth 5 != 6

 ++++++++++++++++++++++++++++++++++++++++++ 17  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (STR get) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 18  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 19  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (STR set)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945744 (STR set)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 20  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945744 (STR set)) c_idx(0) s_idx(0)) =>...
>> _add_str_tail: set 53. [None, 6, 'T', 'set']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 21  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
53. [None, 6, 'T', 'set']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# _set_grm_back_tracking at depth (6) ....... (# CURRENT PARSING DEPTH WRONG. ex:6 grm:5. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 22  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 1
# Backtracking.POP SKIP for depth 5 != 6

 ++++++++++++++++++++++++++++++++++++++++++ 23  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (STR set) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 24  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 25  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(2) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (STR async)
$$$ _get_specified_rep_or_cho_frame cho_idx= 2 -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(2) s_idx(0)) =>...
>> _cho_trycurrent_tail: 52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945824 (STR async)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 26  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945824 (STR async)) c_idx(0) s_idx(0)) =>...
>> _add_str_tail: async 53. [None, 6, 'T', 'async']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 27  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
53. [None, 6, 'T', 'async']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# _set_grm_back_tracking at depth (6) ....... (# CURRENT PARSING DEPTH WRONG. ex:6 grm:5. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 28  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 1
# Backtracking.POP SKIP for depth 5 != 6

 ++++++++++++++++++++++++++++++++++++++++++ 29  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (STR async) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 30  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) 2 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 3
BACKTRACKING.NEXT: CHOICE 2 -> 3

 ++++++++++++++++++++++++++++++++++++++++++ 31  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(3) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (STR static)
$$$ _get_specified_rep_or_cho_frame cho_idx= 3 -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(3) s_idx(0)) =>...
>> _cho_trycurrent_tail: 52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945904 (STR static)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 32  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945904 (STR static)) c_idx(0) s_idx(0)) =>...
>> _add_str_tail: static 53. [None, 6, 'T', 'static']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 33  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
53. [None, 6, 'T', 'static']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# _set_grm_back_tracking at depth (6) ....... (# CURRENT PARSING DEPTH WRONG. ex:6 grm:5. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 34  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 1
# Backtracking.POP SKIP for depth 5 != 6

 ++++++++++++++++++++++++++++++++++++++++++ 35  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (STR static) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 36  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) 3 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 4
BACKTRACKING.NEXT: CHOICE 3 -> 4

 ++++++++++++++++++++++++++++++++++++++++++ 37  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(4) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['"js.property_identifier"', ['"_val1_"', '"a"']]
    --- PRETTY PROD: (STR export)
$$$ _get_specified_rep_or_cho_frame cho_idx= 4 -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(4) s_idx(0)) =>...
>> _cho_trycurrent_tail: 52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945984 (STR export)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 38  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
52. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945984 (STR export)) c_idx(0) s_idx(0)) =>...
>> _add_str_tail: export 53. [None, 6, 'T', 'export']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 39  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
53. [None, 6, 'T', 'export']  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887942304 (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression)))) c_idx(0) s_idx(1)) =>...
# _set_grm_back_tracking at depth (6) ....... (# CURRENT PARSING DEPTH WRONG. ex:6 grm:5. Backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 40  _tail_stack: 54 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 1
# Backtracking.POP SKIP for depth 5 != 6

 ++++++++++++++++++++++++++++++++++++++++++ 41  _tail_stack: 53 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (STR export) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 42  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) 4 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 5
BACKTRACKING.NEXT: CHOICE 4 -> 5

 ++++++++++++++++++++++++++++++++++++++++++ 43  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
51. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(5) s_idx(0)) =>...
@@@@@@@@  NULLIFY last frame grm nullified. -1. None  |  ['_reserved_identifier']  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887945504 (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export))) c_idx(-1) s_idx(0)) =>...
# _set_grm_back_tracking at depth (6) ....... (CHOICE out of index 5/5. nullified and backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 44  _tail_stack: 52 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (STR get) | (STR set) | (STR async) | (STR static) | (STR export)) -1 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 45  _tail_stack: 51 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (SYMBOL _reserved_identifier) 0 0
BACKTRACKING.POP  6

 ++++++++++++++++++++++++++++++++++++++++++ 46  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 47  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
49. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(2) s_idx(0)) =>...
@@@@@@@@  NULLIFY last frame grm nullified. -1. [6, 5, 'NT', '"js.property_identifier"']  |  []  \\\  (EXC ntdepth(6) eid(8) frag(['"js.property_identifier"', ['"_val1_"', '"a"']]) fidx(1)) =>...  ///  (GRC ntdepth(6) pid(6) prod(140354887943984 (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) c_idx(-1) s_idx(0)) =>...
# _set_grm_back_tracking at depth (6) ....... (CHOICE out of index 2/2. nullified and backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 48  _tail_stack: 50 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 6)------- (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier)) -1 0
BACKTRACKING.POP 6  MATCHED_NT ALIASED NON-CF: property_identifier _grm_back_tracking_NT_depth 6 -> 5

 ++++++++++++++++++++++++++++++++++++++++++ 49  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 50  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) 0 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 1
BACKTRACKING.NEXT: CHOICE 0 -> 1

 ++++++++++++++++++++++++++++++++++++++++++ 51  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(1) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
    --- PRETTY PROD: (SYMBOL private_property_identifier)
$$$ _get_specified_rep_or_cho_frame cho_idx= 1 -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(1) s_idx(0)) =>...
>> _cho_trycurrent_tail: 48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944464 (SYMBOL private_property_identifier)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 52  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944464 (SYMBOL private_property_identifier)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.property_identifier"', ['"_val1_"', '"a"']] (1 of parent)

# _set_grm_back_tracking at depth (5) ....... (# symbol/aliased mismatch: "js.property_identifier" != "js.private_property_identifier")

 ++++++++++++++++++++++++++++++++++++++++++ 53  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SYMBOL private_property_identifier) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 54  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) 1 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 2
BACKTRACKING.NEXT: CHOICE 1 -> 2

 ++++++++++++++++++++++++++++++++++++++++++ 55  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(2) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
    --- PRETTY PROD: (SYMBOL string)
$$$ _get_specified_rep_or_cho_frame cho_idx= 2 -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(2) s_idx(0)) =>...
>> _cho_trycurrent_tail: 48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944624 (SYMBOL string)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 56  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944624 (SYMBOL string)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.property_identifier"', ['"_val1_"', '"a"']] (1 of parent)

# _set_grm_back_tracking at depth (5) ....... (# symbol/aliased mismatch: "js.property_identifier" != "js.string")

 ++++++++++++++++++++++++++++++++++++++++++ 57  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SYMBOL string) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 58  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) 2 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 3
BACKTRACKING.NEXT: CHOICE 2 -> 3

 ++++++++++++++++++++++++++++++++++++++++++ 59  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(3) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
    --- PRETTY PROD: (SYMBOL number)
$$$ _get_specified_rep_or_cho_frame cho_idx= 3 -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(3) s_idx(0)) =>...
>> _cho_trycurrent_tail: 48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944704 (SYMBOL number)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 60  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944704 (SYMBOL number)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.property_identifier"', ['"_val1_"', '"a"']] (1 of parent)

# _set_grm_back_tracking at depth (5) ....... (# symbol/aliased mismatch: "js.property_identifier" != "js.number")

 ++++++++++++++++++++++++++++++++++++++++++ 61  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SYMBOL number) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 62  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) 3 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 4
BACKTRACKING.NEXT: CHOICE 3 -> 4

 ++++++++++++++++++++++++++++++++++++++++++ 63  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(4) s_idx(0)) =>...
--- _is_possible_prod_for_ex_contin frag_idx: 1 ['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]
    --- PRETTY PROD: (SYMBOL computed_property_name)
$$$ _get_specified_rep_or_cho_frame cho_idx= 4 -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(4) s_idx(0)) =>...
>> _cho_trycurrent_tail: 48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944784 (SYMBOL computed_property_name)) c_idx(0) s_idx(0)) =>...

 ++++++++++++++++++++++++++++++++++++++++++ 64  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
48. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887944784 (SYMBOL computed_property_name)) c_idx(0) s_idx(0)) =>...
# symbol/aliased. expan_fragment_elem: ['"js.property_identifier"', ['"_val1_"', '"a"']] (1 of parent)

# _set_grm_back_tracking at depth (5) ....... (# symbol/aliased mismatch: "js.property_identifier" != "js.computed_property_name")

 ++++++++++++++++++++++++++++++++++++++++++ 65  _tail_stack: 49 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SYMBOL computed_property_name) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 66  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) 4 0
$$$ GETNEXT (for rep/cho) frame grm nexted: 5
BACKTRACKING.NEXT: CHOICE 4 -> 5

 ++++++++++++++++++++++++++++++++++++++++++ 67  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
47. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(5) s_idx(0)) =>...
@@@@@@@@  NULLIFY last frame grm nullified. -1. None  |  ['_property_name']  \\\  (EXC ntdepth(5) eid(8) frag(['fragment', ['"js.property_identifier"', ['"_val1_"', '"a"']], ['str', '":"'], ['"*1"', 10]]) fidx(1)) =>...  ///  (GRC ntdepth(5) pid(5) prod(140354887943744 (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name))) c_idx(-1) s_idx(0)) =>...
# _set_grm_back_tracking at depth (5) ....... (CHOICE out of index 5/5. nullified and backtracking.)

 ++++++++++++++++++++++++++++++++++++++++++ 68  _tail_stack: 48 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (CHOICE (ALIAS True property_identifier (CHOICE (SYMBOL identifier) | (SYMBOL _reserved_identifier))) | (SYMBOL private_property_identifier) | (SYMBOL string) | (SYMBOL number) | (SYMBOL computed_property_name)) -1 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 69  _tail_stack: 47 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SYMBOL _property_name) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 70  _tail_stack: 46 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (FIELD key (SYMBOL _property_name)) 0 0
BACKTRACKING.POP  5

 ++++++++++++++++++++++++++++++++++++++++++ 71  _tail_stack: 45 ++++++++++++++++++++++++++++++++++++++++++
BACKTRACKING CHECKING ------(at grm_nt_depth 5)------- (SEQ (FIELD key (SYMBOL _property_name)) (STR :) (FIELD value (SYMBOL expression))) 0 0
# Backtracking TERMINATED. Meet aliased Non-Context-Free symbol (pair) of the specified NT depth (5). Backtracking to such symbol indicates syntax errors.
# _get_or_create_next_alt_func PARSE is_acceptable: False  is_done: False
!!!!!!!!!! _expand_loop apply_expand_func FAILED on exid:8 (corres_slot_id:8). Backward...


############## traceback ##############
############## err ##############
<class 'Exception'>
Automatic backward and re-try (choices) is not implemented

# ----- time elapsed: 0.047398599999723956
Response error_info: {'msg': 'Automatic backward and re-try (choices) is not implemented'}
